name: "Downstream Test"
description: "Test against a downstream library"
inputs:
  package_name:
    description: "The downstream PyPI package name"
    required: true
  package_spec:
    description: "The package spec to install"
    default: '."[test]"'
    required: true
  package_download_extra_args:
    description: "The arguments used to download the package"
  test_command:
    description: "The test command"
    default: "pytest -vv -raXxs -W default --durations 10 --color=yes"
    required: true
  extra_test:
    description: "Optional extra test to run"
  env_values:
    description: "Optional env values to set for test, e.g. 'FOO=BAR FIZZ=BUZZ'"
runs:
  using: "composite"
  steps:
    - name: set up venv
      shell: bash
      run: |
        set -x

        # Do not use previous constraints file.
        unset PIP_CONSTRAINT

        echo "::group::Set up env values"
        package_name=${{inputs.package_name}}
        package_spec="${{inputs.package_spec}}"
        test_command="${{inputs.test_command}}"
        package_download_extra_args="${{inputs.package_download_extra_args}}"
        root=$(pwd)
        eval "${{inputs.env_values}}"
        echo "::endgroup::"

        echo "::group::Set up venv"
        cd $HOME
        python -m venv test_venv
        export PATH=$HOME/test_venv/bin:$PATH
        python -m pip install -U pip wheel setuptools
        cd test_venv
        echo "::endgroup::"

        echo "::group::Download and extract the sdist"
        mkdir downstream_test
        cd downstream_test
        pip download ${package_download_extra_args} --no-deps --no-binary ${package_name} ${package_name}
        mkdir ${package_name}
        tar xfz *.tar.gz -C ${package_name} --strip-components 1
        cd ${package_name}
        echo "::endgroup::"

        echo "::group::Install the target package, then re-install ourselves"
        python -m pip install ${package_spec}
        python -m pip install ${root} --force-reinstall
        echo "::endgroup::"

        echo "::group::Test the downstream package"
        eval ${test_command}
        eval "${{inputs.extra_test}}"
        echo "::endgroup::"

        echo "::group::Cleanup"
        cd $HOME
        rm -rf ./test_venv
        echo "::endgroup::"
