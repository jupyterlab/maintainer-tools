name: "Base Setup"
description: "Base Setup Actions Used Across Workflows"
inputs:
  python_version:
    description: "The python version"
  node_version:
    description: "The node version"
runs:
  using: "composite"
  steps:
    - name: Set Versions
      shell: bash
      run: |
        echo "PYTHON_VERSION=${{ inputs.python_version || matrix.python-version || '3.10' }}" >> $GITHUB_ENV
        echo "NODE_VERSION=${{ inputs.node_version || matrix.node-version || '16.x' }}" >> $GITHUB_ENV
        echo "CACHE_PREFIX=${{ runner.os }}-${{ github.workflow}}-${{ github.job }}" >> $GITHUB_ENV

    - name: Install Python
      uses: actions/setup-python@v3
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        architecture: "x64"

    - name: Install node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Get pip cache dir
      id: pip-cache
      shell: bash
      run: |
        echo "::set-output name=dir::$(pip cache dir)"

    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ env.CACHE_PREFIX }}-pip-${{ env.PYTHON_VERSION }}-${{ hashFiles('setup.cfg', 'setup.py', '**/requirements.txt') }}
        restore-keys: |
          ${{ env.CACHE_PREFIX }}-pip-${{ env.PYTHON_VERSION }}

    - name: Cache checked links
      if: ${{ matrix.group == 'link_check' }}
      uses: actions/cache@v3
      with:
        path: ~/.cache/pytest-link-check
        key: ${{ env.CACHE_PREFIX }}-linkcheck-${{ hashFiles('**/*.md', '**/*.rst') }}-links
        restore-keys: |
          ${{ env.CACHE_PREFIX }}-linkcheck-

    - name: Cache conda
      uses: actions/cache@v3
      with:
        path: ~/conda_pkgs_dir
        key: ${{ env.CACHE_PREFIX  }}-conda-${{ env.CACHE_NUMBER }}-${{
          hashFiles('**/environment*.yml') }}
        restore-keys: |
          ${{ env.CACHE_PREFIX }}-conda-

    # Cache yarn
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      shell: bash
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Cache yarn
      uses: actions/cache@v3
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ env.CACHE_PREFIX }}-yarn-${{ env.NODE_VERSION }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ env.CACHE_PREFIX }}-yarn-${{ env.NODE_VERSION }}

    - name: Enable long paths on Windows
      if: startsWith(runner.os, 'Windows')
      run: Set-ItemProperty -Path HKLM:\SYSTEM\CurrentControlSet\Control\FileSystem -Name LongPathsEnabled -Value 1
      shell: pwsh

    - name: Upgrade packaging dependencies
      shell: bash
      run: |
        echo "::group::Upgrade packaging dependencies"
        pip install --upgrade pip setuptools wheel pytest-github-actions-annotate-failures
        # Install hatch as global cli tool
        pipx install hatch
        echo "::endgroup::"

    - name: Print Diagnostics
      shell: bash
      run: |
        set -x
        echo "::group::env"
        env
        echo "::endgroup::"
        pip debug
        yarn --version
        node --version
